/*
===============================================================================
Magnitude Analysis
===============================================================================
Purpose:
    - To quantify data and group results by specific dimensions.
    - For understanding data distribution across categories.

SQL Functions Used:
    - Aggregate Functions: SUM(), COUNT(), AVG()
    - GROUP BY, ORDER BY
===============================================================================
*/

-- Find total customers by countries
SELECT
    country,
    COUNT(customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY country
ORDER BY country;

-- Find total customers by gender
SELECT
    gender,
    COUNT(customer_key) AS total_customers
FROM gold.dim_customers
GROUP BY gender
ORDER BY gender DESC;

-- Find total products by category
SELECT
    category,
    COUNT(product_key) AS total_products
FROM gold.dim_products
GROUP BY category
ORDER BY COUNT(product_key) DESC;

-- What is the average costs in each category?
SELECT
    category,
    FORMAT(AVG(cost), 'C') AS avg_cost
FROM gold.dim_products
GROUP BY category
ORDER BY AVG(cost) DESC;

-- What is the total revenue generated for each category?
SELECT 
    category,
    FORMAT(COALESCE(SUM(sales_amount),0), 'C') AS total_revenue
FROM gold.fact_sales fs
LEFT JOIN gold.dim_products dp 
    ON dp.product_key = fs.product_key
GROUP BY category
ORDER BY SUM(sales_amount) DESC;

-- What is the total revenue generated by each customer?
SELECT 
    d.customer_key,
    d.first_name,
    d.last_name,
    SUM(f.sales_amount) AS total_revenue
FROM gold.fact_sales f 
LEFT JOIN gold.dim_customers d
    ON d.customer_key = f.customer_key
GROUP BY 
    d.customer_key,
    d.first_name,
    d.last_name
ORDER BY total_revenue DESC;

-- What is the distribution of sold items across countries?
SELECT 
    d.country,
    SUM(f.quantity) AS total_items_sold
FROM gold.fact_sales f 
LEFT JOIN gold.dim_customers d
    ON d.customer_key = f.customer_key
GROUP BY 
    d.country
ORDER BY total_items_sold DESC;